#!/usr/bin/env ruby

# This file is based heavily on Capistrano's `capify` command

require 'optparse'
require 'fileutils'

OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [path]"

  begin
    opts.parse!(ARGV)
  rescue OptionParser::ParseError => e
    warn e.message
    puts opts
    exit 1
  end
end

unless ARGV.empty?
  if !File.exist?(ARGV.first)
    abort "`#{ARGV.first}' does not exist."
  elsif !File.directory?(ARGV.first)
    abort "`#{ARGV.first}' is not a directory."
  elsif ARGV.length > 1
    abort "Too many arguments; please specify only the directory to wheneverize."
  end
end

content = <<-FILE
# Use this file to easily define all of your cron jobs.
#
# It's helpful, but not entirely necessary to understand cron before proceeding.
# http://en.wikipedia.org/wiki/Cron

# Example:
#
# set :output, "/path/to/my/cron_log.log"
#
# every 2.hours do
#   command "/usr/bin/some_great_command"
#   runner "MyModel.some_method"
#   rake "some:great:rake:task"
# end
#
# every 4.days do
#   runner "AnotherModel.prune_old_records"
# end

# Learn more: http://github.com/javan/whenever
FILE

file = 'config/schedule.rb'
base = ARGV.empty? ? '.' : ARGV.shift

file = File.join(base, file)
if File.exist?(file)
  warn "[skip] `#{file}' already exists"
elsif File.exist?(file.downcase)
  warn "[skip] `#{file.downcase}' exists, which could conflict with `#{file}'"
else
  dir = File.dirname(file)
  if !File.exist?(dir)
    warn "[add] creating `#{dir}'"
    FileUtils.mkdir_p(dir)
  end
  puts "[add] writing `#{file}'"
  File.open(file, "w") { |f| f.write(content) }
end

puts "[done] wheneverized!"
